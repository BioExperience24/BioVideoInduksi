@page
@model CleanArchitecture.Frontend.Pages.Player.Index

<h1>@ViewData["Title"]</h1>

<button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modalShow">Create</button>

<table class="table">
    <thead>
        <tr>
            <th>No</th>
            <th>Player Name</th>
            <th>Serial</th>
            <th>Player Group</th>
            <th>Live</th>
            <th class="text-center">Action</th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Items != null && Model.Items.Any())
        {
            @foreach (var itemPlayer in Model.Items.Select((value, index) => new { index, value }))
            {
                <tr>
                    <td>@(itemPlayer.index + 1)</td>
                    <td>@itemPlayer.value.Name</td>
                    <td>@itemPlayer.value.Serial</td>
                    <td>@itemPlayer.value.PlayerGroup.Name</td>
                    <td>
                        @if (itemPlayer.value.Publish != null)
                        {
                            <span class="badge bg-success">@itemPlayer.value.Publish.PublishType</span>
                        }
                        else
                        {
                            <span class="badge bg-secondary">Not Live</span>
                        }
                    </td>
                    <td class="text-center">
                        <button class="btn btn-primary" onclick="editPlayer(@itemPlayer.value.Id)">Edit</button>
                        <button class="btn btn-danger" onclick="deletePlayer(@itemPlayer.value.Id)">Delete</button>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="3" class="text-center">No Player found</td>
            </tr>
        }
    </tbody>
</table>

<div class="modal fade" id="modalShow" tabindex="-1" role="dialog" aria-labelledby="modalShowLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalShowLabel">New Player</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="createPlayerForm">
                    <input type="hidden" id="playerId">
                    <div class="form-group mb-3">
                        <label for="playerName"> Name</label>
                        <input type="text" class="form-control" id="playerName" placeholder="Enter Player name"
                            required>
                    </div>
                    <div class="form-group mb-3">
                        <label for="serial">Serial</label>
                        <input type="text" class="form-control" id="serial" placeholder="Enter Serial" required>
                    </div>
                    <div class="form-group">
                        <label for="playerGroupId">Player Group</label>
                        <select class="form-control" id="playerGroupId" required>
                            @if (Model.ItemPlayerGroups != null && Model.ItemPlayerGroups.Any())
                            {
                                @foreach (var playerGroup in Model.ItemPlayerGroups)
                                {
                                    <option value="@playerGroup.Id">@playerGroup.Name</option>
                                }
                            }
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="savePlayer()">Save</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/callapi.js"></script>
    <script>
        const baseUrlApi = '@ViewData["BaseUrlApi"]';

        function deletePlayer(id) {
            deleteData(`${baseUrlApi}/Player?id=${id}`);
        }

        function showPlayer(result) {
            $('#playerName').val(result.name);
            $('#playerId').val(result.id);
            $('#serial').val(result.serial);
            $('#playerGroupId').val(result.playerGroupId).trigger('change');
            $('#modalShow').modal('show');
            $('#modalShowLabel').text('Edit Player ');
        }

        function editPlayer(playerId) {
            $.ajax({
                url: `${baseUrlApi}/Player/${playerId}`,
                type: 'GET',
                beforeSend: function () {
                    swal({
                        title: 'Please wait...',
                        text: 'Fetching Player...',
                        buttons: false,
                        closeOnClickOutside: false,
                        closeOnEsc: false
                    });
                },
                success: function (res, textStatus, xhr) {
                    if (xhr.status == 200) {
                        swal.close();
                        showPlayer(res);
                    }
                }
            });
        }

        function savePlayer() {
            let playerName = $('#playerName').val();
            let id = $('#playerId').val();
            let method = 'POST';
            let formData = new FormData();

            if (id != '') {
                formData.append("Id", id);
                method = 'PUT';
            }

            formData.append("Name", playerName);
            formData.append("Serial", $('#serial').val());
            formData.append("PlayerGroupId", $('#playerGroupId').val());

            submitFormData(formData, `${baseUrlApi}/Player`, method);
        }
    </script>
}
