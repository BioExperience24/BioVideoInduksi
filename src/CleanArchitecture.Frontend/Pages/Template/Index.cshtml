@page
@model CleanArchitecture.Frontend.Pages.Template.Index

<div class="row">
    <div class="col-sm-12">
        <div class="card">
            <div class="card-header">
                <h3 class="text-muted text-title pt-2">List @ViewData["Title"]</h3>
            </div>
            <div class="card-body py-0">
                <div class="table-responsive">
                    <table class="table table-bordered zero-configuration">
                        <thead>
                            <tr>
                                <th width="5%" class="text-center">No</th>
                                <th>Name</th>
                                <th>Orientation</th>
                                <th class="text-center" width="5%">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.Items != null && Model.Items.Any())
                            {
                                @foreach (var item in Model.Items.Select((value, index) => new { index, value }))
                                {
                                    <tr>
                                        <td class="text-center">@(item.index + 1)</td>
                                        <td>@item.value.Name</td>
                                        <td>@item.value.Orientation</td>
                                        <td class="text-center">
                                            <button class="btn btn-primary" onclick="editData(@item.value.Id)">
                                                <i class="fa fa-edit"></i>
                                            </button>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="4" class="text-center">No template found.</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modalShow" tabindex="-1" role="dialog" aria-labelledby="modalShowLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalShowLabel">Edit Template</h5>
                <button type="button" class="btn btn-danger" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="createMediaForm">
                    <input type="hidden" id="id">
                    <div class="form-group mb-3">
                        <label for="name">Name</label>
                        <input type="text" class="form-control" id="name" placeholder="Enter name" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" onclick="saveData()">Save</button>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script src="~/theme/plugins/tables/js/datatable-init/datatable-basic.min.js"></script>
    <script>
        const baseUrlApi = '@ViewData["BaseUrlApi"]';

        function showData(result) {
            $('#name').val(result.name);
            $('#id').val(result.id);
            $('#modalShow').modal('show');
        }

        function editData(id) {
            $.ajax({
                url: `${baseUrlApi}/Template/${id}`,
                type: 'GET',
                beforeSend: function () {
                    swal({
                        title: 'Please wait...',
                        text: 'Fetching data...',
                        buttons: false,
                        closeOnClickOutside: false,
                        closeOnEsc: false
                    });
                },
                success: function (res, textStatus, xhr) {
                    if (xhr.status == 200) {
                        swal.close();
                        showData(res);
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Error editing data:", error);
                }
            });
        }

        function saveData() {
            let name = $('#name').val();
            let id = $('#id').val();
            let formData = new FormData();

            formData.append("Name", name);
            formData.append("Id", id);

            submitFormData(formData, `${baseUrlApi}/Template`, 'PUT');
        }
    </script>
}